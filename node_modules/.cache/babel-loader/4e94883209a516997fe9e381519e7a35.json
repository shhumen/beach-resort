{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/HP/Desktop/My Files/frontend files/beach-resort/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"C:/Users/HP/Desktop/My Files/frontend files/beach-resort/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createContentfulApi;\n\nvar _contentfulSdkCore = require(\"contentful-sdk-core\");\n\nvar _entities = _interopRequireDefault(require(\"./entities\"));\n\nvar _pagedSync = _interopRequireDefault(require(\"./paged-sync\"));\n\nvar _normalizeSelect = _interopRequireDefault(require(\"./utils/normalize-select\"));\n\nvar _validateTimestamp = _interopRequireDefault(require(\"./utils/validate-timestamp\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar ASSET_KEY_MAX_LIFETIME = 48 * 60 * 60;\n/**\n * Creates API object with methods to access functionality from Contentful's\n * Delivery API\n * @private\n * @param {Object} params - API initialization params\n * @prop {Object} http - HTTP client instance\n * @prop {Object} entities - Object with wrapper methods for each kind of entity\n * @prop {Function} getGlobalOptions - Link resolver preconfigured with global setting\n * @return {ClientAPI}\n */\n\nfunction createContentfulApi(_ref) {\n  var http = _ref.http,\n      getGlobalOptions = _ref.getGlobalOptions;\n  var wrapSpace = _entities.default.space.wrapSpace;\n  var _entities$default$con = _entities.default.contentType,\n      wrapContentType = _entities$default$con.wrapContentType,\n      wrapContentTypeCollection = _entities$default$con.wrapContentTypeCollection;\n  var _entities$default$ent = _entities.default.entry,\n      wrapEntry = _entities$default$ent.wrapEntry,\n      wrapEntryCollection = _entities$default$ent.wrapEntryCollection;\n  var _entities$default$ass = _entities.default.asset,\n      wrapAsset = _entities$default$ass.wrapAsset,\n      wrapAssetCollection = _entities$default$ass.wrapAssetCollection;\n  var _entities$default$tag = _entities.default.tag,\n      wrapTag = _entities$default$tag.wrapTag,\n      wrapTagCollection = _entities$default$tag.wrapTagCollection;\n  var wrapAssetKey = _entities.default.assetKey.wrapAssetKey;\n  var wrapLocaleCollection = _entities.default.locale.wrapLocaleCollection;\n\n  var notFoundError = function notFoundError(id) {\n    var error = new Error('The resource could not be found.');\n    error.sys = {\n      type: 'Error',\n      id: 'NotFound'\n    };\n    error.details = {\n      type: 'Entry',\n      id: id,\n      environment: getGlobalOptions().environment,\n      space: getGlobalOptions().space\n    };\n    return error;\n  };\n  /**\n   * Gets the Space which the client is currently configured to use\n   * @memberof ContentfulClientAPI\n   * @return {Promise<Entities.Space>} Promise for a Space\n   * @example\n   * const contentful = require('contentful')\n   *\n   * const client = contentful.createClient({\n   *   space: '<space_id>',\n   *   accessToken: '<content_delivery_api_key>'\n   * })\n   * // returns the space object with the above <space-id>\n   * const space = await client.getSpace()\n   * console.log(space)\n   */\n\n\n  function getSpace() {\n    return _getSpace.apply(this, arguments);\n  }\n  /**\n   * Gets a Content Type\n   * @memberof ContentfulClientAPI\n   * @param  {string} id\n   * @return {Promise<Entities.ContentType>} Promise for a Content Type\n   * @example\n   * const contentful = require('contentful')\n   *\n   * const client = contentful.createClient({\n   *   space: '<space_id>',\n   *   accessToken: '<content_delivery_api_key>'\n   * })\n   *\n   * const contentType = await client.getContentType('<content_type_id>')\n   * console.log(contentType)\n   */\n\n\n  function _getSpace() {\n    _getSpace = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var response;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              switchToSpace(http);\n              _context.prev = 1;\n              _context.next = 4;\n              return http.get('/');\n\n            case 4:\n              response = _context.sent;\n              return _context.abrupt(\"return\", wrapSpace(response.data));\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              (0, _contentfulSdkCore.errorHandler)(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8]]);\n    }));\n    return _getSpace.apply(this, arguments);\n  }\n\n  function getContentType(_x) {\n    return _getContentType.apply(this, arguments);\n  }\n  /**\n   * Gets a collection of Content Types\n   * @memberof ContentfulClientAPI\n   * @param  {Object=} query - Object with search parameters. Check the <a href=\"https://www.contentful.com/developers/docs/javascript/tutorials/using-js-cda-sdk/#retrieving-entries-with-search-parameters\">JS SDK tutorial</a> and the <a href=\"https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/search-parameters\">REST API reference</a> for more details.\n   * @return {Promise<Entities.ContentTypeCollection>} Promise for a collection of Content Types\n   * @example\n   * const contentful = require('contentful')\n   *\n   * const client = contentful.createClient({\n   *   space: '<space_id>',\n   *   accessToken: '<content_delivery_api_key>'\n   * })\n   *\n   * const response = await client.getContentTypes()\n   * console.log(response.items)\n   */\n\n\n  function _getContentType() {\n    _getContentType = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(id) {\n      var response;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              switchToEnvironment(http);\n              _context2.prev = 1;\n              _context2.next = 4;\n              return http.get(\"content_types/\".concat(id));\n\n            case 4:\n              response = _context2.sent;\n              return _context2.abrupt(\"return\", wrapContentType(response.data));\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              (0, _contentfulSdkCore.errorHandler)(_context2.t0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 8]]);\n    }));\n    return _getContentType.apply(this, arguments);\n  }\n\n  function getContentTypes() {\n    return _getContentTypes.apply(this, arguments);\n  }\n  /**\n   * Gets an Entry\n   * @memberof ContentfulClientAPI\n   * @param  {string} id\n   * @param  {Object=} query - Object with search parameters. In this method it's only useful for `locale`.\n   * @return {Promise<Entities.Entry>} Promise for an Entry\n   * @example\n   * const contentful = require('contentful')\n   *\n   * const client = contentful.createClient({\n   *   space: '<space_id>',\n   *   accessToken: '<content_delivery_api_key>'\n   * })\n   *\n   * const entry = await client.getEntry('<entry_id>')\n   * console.log(entry)\n   */\n\n\n  function _getContentTypes() {\n    _getContentTypes = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var query,\n          response,\n          _args3 = arguments;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              query = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {};\n              switchToEnvironment(http);\n              _context3.prev = 2;\n              _context3.next = 5;\n              return http.get('content_types', (0, _contentfulSdkCore.createRequestConfig)({\n                query: query\n              }));\n\n            case 5:\n              response = _context3.sent;\n              return _context3.abrupt(\"return\", wrapContentTypeCollection(response.data));\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](2);\n              (0, _contentfulSdkCore.errorHandler)(_context3.t0);\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[2, 9]]);\n    }));\n    return _getContentTypes.apply(this, arguments);\n  }\n\n  function getEntry(_x2) {\n    return _getEntry.apply(this, arguments);\n  }\n  /**\n   * Gets a collection of Entries\n   * @memberof ContentfulClientAPI\n   * @param  {Object=} query - Object with search parameters. Check the <a href=\"https://www.contentful.com/developers/docs/javascript/tutorials/using-js-cda-sdk/#retrieving-entries-with-search-parameters\">JS SDK tutorial</a> and the <a href=\"https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/search-parameters\">REST API reference</a> for more details.\n   * @return {Promise<Entities.EntryCollection>} Promise for a collection of Entries\n   * @example\n   * const contentful = require('contentful')\n   *\n   * const client = contentful.createClient({\n   *   space: '<space_id>',\n   *   accessToken: '<content_delivery_api_key>'\n   * })\n   *\n   * const response = await client.getEntries()\n   * console.log(response.items)\n   */\n\n\n  function _getEntry() {\n    _getEntry = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(id) {\n      var query,\n          response,\n          _args4 = arguments;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              query = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : {};\n\n              if (id) {\n                _context4.next = 3;\n                break;\n              }\n\n              throw notFoundError(id);\n\n            case 3:\n              _context4.prev = 3;\n              _context4.next = 6;\n              return this.getEntries(_objectSpread({\n                'sys.id': id\n              }, query));\n\n            case 6:\n              response = _context4.sent;\n\n              if (!(response.items.length > 0)) {\n                _context4.next = 11;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", wrapEntry(response.items[0]));\n\n            case 11:\n              throw notFoundError(id);\n\n            case 12:\n              _context4.next = 17;\n              break;\n\n            case 14:\n              _context4.prev = 14;\n              _context4.t0 = _context4[\"catch\"](3);\n              (0, _contentfulSdkCore.errorHandler)(_context4.t0);\n\n            case 17:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this, [[3, 14]]);\n    }));\n    return _getEntry.apply(this, arguments);\n  }\n\n  function getEntries() {\n    return _getEntries.apply(this, arguments);\n  }\n  /**\n   * Gets an Asset\n   * @memberof ContentfulClientAPI\n   * @param  {string} id\n   * @param  {Object=} query - Object with search parameters. In this method it's only useful for `locale`.\n   * @return {Promise<Entities.Asset>} Promise for an Asset\n   * @example\n   * const contentful = require('contentful')\n   *\n   * const client = contentful.createClient({\n   *   space: '<space_id>',\n   *   accessToken: '<content_delivery_api_key>'\n   * })\n   *\n   * const asset = await client.getAsset('<asset_id>')\n   * console.log(asset)\n   */\n\n\n  function _getEntries() {\n    _getEntries = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n      var query,\n          _getGlobalOptions2,\n          resolveLinks,\n          removeUnresolved,\n          response,\n          _args5 = arguments;\n\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              query = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : {};\n              switchToEnvironment(http);\n              _getGlobalOptions2 = getGlobalOptions(query), resolveLinks = _getGlobalOptions2.resolveLinks, removeUnresolved = _getGlobalOptions2.removeUnresolved;\n              query = (0, _normalizeSelect.default)(query);\n              _context5.prev = 4;\n              _context5.next = 7;\n              return http.get('entries', (0, _contentfulSdkCore.createRequestConfig)({\n                query: query\n              }));\n\n            case 7:\n              response = _context5.sent;\n              return _context5.abrupt(\"return\", wrapEntryCollection(response.data, {\n                resolveLinks: resolveLinks,\n                removeUnresolved: removeUnresolved\n              }));\n\n            case 11:\n              _context5.prev = 11;\n              _context5.t0 = _context5[\"catch\"](4);\n              (0, _contentfulSdkCore.errorHandler)(_context5.t0);\n\n            case 14:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[4, 11]]);\n    }));\n    return _getEntries.apply(this, arguments);\n  }\n\n  function getAsset(_x3) {\n    return _getAsset.apply(this, arguments);\n  }\n  /**\n   * Gets a collection of Assets\n   * @memberof ContentfulClientAPI\n   * @param  {Object=} query - Object with search parameters. Check the <a href=\"https://www.contentful.com/developers/docs/javascript/tutorials/using-js-cda-sdk/#retrieving-entries-with-search-parameters\">JS SDK tutorial</a> and the <a href=\"https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/search-parameters\">REST API reference</a> for more details.\n   * @return {Promise<Entities.AssetCollection>} Promise for a collection of Assets\n   * @example\n   * const contentful = require('contentful')\n   *\n   * const client = contentful.createClient({\n   *   space: '<space_id>',\n   *   accessToken: '<content_delivery_api_key>'\n   * })\n   *\n   * const response = await client.getAssets()\n   * console.log(response.items)\n   */\n\n\n  function _getAsset() {\n    _getAsset = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(id) {\n      var query,\n          response,\n          _args6 = arguments;\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              query = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : {};\n              switchToEnvironment(http);\n              query = (0, _normalizeSelect.default)(query);\n              _context6.prev = 3;\n              _context6.next = 6;\n              return http.get(\"assets/\".concat(id), (0, _contentfulSdkCore.createRequestConfig)({\n                query: query\n              }));\n\n            case 6:\n              response = _context6.sent;\n              return _context6.abrupt(\"return\", wrapAsset(response.data));\n\n            case 10:\n              _context6.prev = 10;\n              _context6.t0 = _context6[\"catch\"](3);\n              (0, _contentfulSdkCore.errorHandler)(_context6.t0);\n\n            case 13:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[3, 10]]);\n    }));\n    return _getAsset.apply(this, arguments);\n  }\n\n  function getAssets() {\n    return _getAssets.apply(this, arguments);\n  }\n  /**\n   * Gets a Tag\n   * @memberof ContentfulClientAPI\n   * @param  {string} id\n   * @return {Promise<Entities.Tag>} Promise for a Tag\n   * @example\n   * const contentful = require('contentful')\n   *\n   * const client = contentful.createClient({\n   *   space: '<space_id>',\n   *   accessToken: '<content_delivery_api_key>'\n   * })\n   *\n   * const tag = await client.getTag('<asset_id>')\n   * console.log(tag)\n   */\n\n\n  function _getAssets() {\n    _getAssets = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n      var query,\n          response,\n          _args7 = arguments;\n      return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              query = _args7.length > 0 && _args7[0] !== undefined ? _args7[0] : {};\n              switchToEnvironment(http);\n              query = (0, _normalizeSelect.default)(query);\n              _context7.prev = 3;\n              _context7.next = 6;\n              return http.get('assets', (0, _contentfulSdkCore.createRequestConfig)({\n                query: query\n              }));\n\n            case 6:\n              response = _context7.sent;\n              return _context7.abrupt(\"return\", wrapAssetCollection(response.data));\n\n            case 10:\n              _context7.prev = 10;\n              _context7.t0 = _context7[\"catch\"](3);\n              (0, _contentfulSdkCore.errorHandler)(_context7.t0);\n\n            case 13:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[3, 10]]);\n    }));\n    return _getAssets.apply(this, arguments);\n  }\n\n  function getTag(_x4) {\n    return _getTag.apply(this, arguments);\n  }\n  /**\n   * Gets a collection of Tags\n   * @memberof ContentfulClientAPI\n   * @param  {Object=} query - Object with search parameters.\n   * @return {Promise<Entities.TagCollection>} Promise for a collection of Tags\n   * @example\n   * const contentful = require('contentful')\n   *\n   * const client = contentful.createClient({\n   *   space: '<space_id>',\n   *   accessToken: '<content_delivery_api_key>'\n   * })\n   *\n   * const response = await client.getTags()\n   * console.log(response.items)\n   */\n\n\n  function _getTag() {\n    _getTag = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(id) {\n      var response;\n      return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              switchToEnvironment(http);\n              _context8.prev = 1;\n              _context8.next = 4;\n              return http.get(\"tags/\".concat(id));\n\n            case 4:\n              response = _context8.sent;\n              return _context8.abrupt(\"return\", wrapTag(response.data));\n\n            case 8:\n              _context8.prev = 8;\n              _context8.t0 = _context8[\"catch\"](1);\n              (0, _contentfulSdkCore.errorHandler)(_context8.t0);\n\n            case 11:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[1, 8]]);\n    }));\n    return _getTag.apply(this, arguments);\n  }\n\n  function getTags() {\n    return _getTags.apply(this, arguments);\n  }\n  /**\n   * Creates an asset key for signing asset URLs (Embargoed Assets)\n   * @memberof ContentfulClientAPI\n   * @param {number} expiresAt - UNIX timestamp in the future, maximum of 48h from now\n   * @return {Promise<Entities.AssetKey>} Promise for an AssetKey\n   * @example\n   * const contentful = require('contentful')\n   *\n   * const client = contentful.createClient({\n   *   space: '<space_id>',\n   *   accessToken: '<content_delivery_api_key>'\n   * })\n   *\n   * const assetKey = await client.getAssetKey(<UNIX timestamp>)\n   * console.log(assetKey)\n   */\n\n\n  function _getTags() {\n    _getTags = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n      var query,\n          response,\n          _args9 = arguments;\n      return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              query = _args9.length > 0 && _args9[0] !== undefined ? _args9[0] : {};\n              switchToEnvironment(http);\n              query = (0, _normalizeSelect.default)(query);\n              _context9.prev = 3;\n              _context9.next = 6;\n              return http.get('tags', (0, _contentfulSdkCore.createRequestConfig)({\n                query: query\n              }));\n\n            case 6:\n              response = _context9.sent;\n              return _context9.abrupt(\"return\", wrapTagCollection(response.data));\n\n            case 10:\n              _context9.prev = 10;\n              _context9.t0 = _context9[\"catch\"](3);\n              (0, _contentfulSdkCore.errorHandler)(_context9.t0);\n\n            case 13:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, null, [[3, 10]]);\n    }));\n    return _getTags.apply(this, arguments);\n  }\n\n  function createAssetKey(_x5) {\n    return _createAssetKey.apply(this, arguments);\n  }\n  /**\n   * Gets a collection of Locale\n   * @memberof ContentfulClientAPI\n   * @param  {Object=} query - Object with search parameters. Check the <a href=\"https://www.contentful.com/developers/docs/javascript/tutorials/using-js-cda-sdk/#retrieving-entries-with-search-parameters\">JS SDK tutorial</a> and the <a href=\"https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/search-parameters\">REST API reference</a> for more details.\n   * @return {Promise<Entities.LocaleCollection>} Promise for a collection of Locale\n   * @example\n   * const contentful = require('contentful')\n   *\n   * const client = contentful.createClient({\n   *   space: '<space_id>',\n   *   accessToken: '<content_delivery_api_key>'\n   * })\n   *\n   * const response = await client.getLocales()\n   * console.log(response.items)\n   */\n\n\n  function _createAssetKey() {\n    _createAssetKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(expiresAt) {\n      var now, currentMaxLifetime, params, response;\n      return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              switchToEnvironment(http);\n              _context10.prev = 1;\n              now = Math.floor(Date.now() / 1000);\n              currentMaxLifetime = now + ASSET_KEY_MAX_LIFETIME;\n              (0, _validateTimestamp.default)('expiresAt', expiresAt, {\n                maximum: currentMaxLifetime,\n                now: now\n              });\n              params = {\n                expiresAt: expiresAt\n              };\n              _context10.next = 8;\n              return http.post('asset_keys', params);\n\n            case 8:\n              response = _context10.sent;\n              return _context10.abrupt(\"return\", wrapAssetKey(response.data));\n\n            case 12:\n              _context10.prev = 12;\n              _context10.t0 = _context10[\"catch\"](1);\n              (0, _contentfulSdkCore.errorHandler)(_context10.t0);\n\n            case 15:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, null, [[1, 12]]);\n    }));\n    return _createAssetKey.apply(this, arguments);\n  }\n\n  function getLocales() {\n    return _getLocales.apply(this, arguments);\n  }\n  /**\n   * Synchronizes either all the content or only new content since last sync\n   * See <a href=\"https://www.contentful.com/developers/docs/concepts/sync/\">Synchronization</a> for more information.\n   * <strong> Important note: </strong> The the sync api endpoint does not support include or link resolution.\n   * However contentful.js is doing link resolution client side if you only make an initial sync.\n   * For the delta sync (using nextSyncToken) it is not possible since the sdk wont have access to all the data to make such an operation.\n   * @memberof ContentfulClientAPI\n   * @param  {Object} query - Query object for the sync call. One of initial or nextSyncToken always needs to be specified, but not both.\n   * @param  {boolean?} query.initial - Indicates if this is the first sync. Use it if you don't have a sync token.\n   * @param  {string?} query.nextSyncToken - The token you got the last time you used this method. Ensures you only get changed content.\n   * @param  {string=} query.type - Filter by this type (all (default), Entry, Asset, Deletion, DeletedAsset or DeletedEntry)\n   * @param  {string=} query.content_type - Filter by this content type id\n   * @param  {boolean=} query.resolveLinks - When true, links to other Entries or Assets are resolved. Default: true.\n   * @param  {Object} options\n   * @param  {boolean=} [options.paginate = true] - Set to false to disable pagination\n   * @return {Promise<Sync.SyncCollection>} Promise for the collection resulting of a sync operation\n   * @example\n   * const contentful = require('contentful')\n   *\n   * const client = contentful.createClient({\n   *   space: '<space_id>',\n   *   accessToken: '<content_delivery_api_key>'\n   * })\n   *\n   * const response = await client.sync({\n   *   initial: true\n   * })\n   * console.log({\n   *   entries: response.entries,\n   *   assets: response.assets,\n   *   nextSyncToken: response.nextSyncToken\n   * })\n   */\n\n\n  function _getLocales() {\n    _getLocales = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n      var query,\n          response,\n          _args11 = arguments;\n      return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              query = _args11.length > 0 && _args11[0] !== undefined ? _args11[0] : {};\n              switchToEnvironment(http);\n              _context11.prev = 2;\n              _context11.next = 5;\n              return http.get('locales', (0, _contentfulSdkCore.createRequestConfig)({\n                query: query\n              }));\n\n            case 5:\n              response = _context11.sent;\n              return _context11.abrupt(\"return\", wrapLocaleCollection(response.data));\n\n            case 9:\n              _context11.prev = 9;\n              _context11.t0 = _context11[\"catch\"](2);\n              (0, _contentfulSdkCore.errorHandler)(_context11.t0);\n\n            case 12:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, null, [[2, 9]]);\n    }));\n    return _getLocales.apply(this, arguments);\n  }\n\n  function sync() {\n    return _sync.apply(this, arguments);\n  }\n  /**\n  * Parse raw json data into collection of entry objects.Links will be resolved also\n  * @memberof ContentfulClientAPI\n  * @param {Object} raw json data\n  * @example\n  * let data = {items: [\n  *    {\n  *    sys: {type: 'Entry', locale: 'en-US'},\n  *    fields: {\n  *      animal: {sys: {type: 'Link', linkType: 'Animal', id: 'oink'}},\n  *      anotheranimal: {sys: {type: 'Link', linkType: 'Animal', id: 'middle-parrot'}}\n  *    }\n  *  }\n  * ],\n  * includes: {\n  *  Animal: [\n  *    {\n  *      sys: {type: 'Animal', id: 'oink', locale: 'en-US'},\n  *      fields: {\n  *        name: 'Pig',\n  *        friend: {sys: {type: 'Link', linkType: 'Animal', id: 'groundhog'}}\n  *      }\n  *    }\n  *   ]\n  *  }\n  * }\n  * console.log( data.items[0].fields.foo ); // undefined\n  * let parsedData = client.parseEntries(data);\n  * console.log( parsedData.items[0].fields.foo ); // foo\n  */\n\n\n  function _sync() {\n    _sync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {\n      var query,\n          options,\n          _getGlobalOptions3,\n          resolveLinks,\n          removeUnresolved,\n          _args12 = arguments;\n\n      return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              query = _args12.length > 0 && _args12[0] !== undefined ? _args12[0] : {};\n              options = _args12.length > 1 && _args12[1] !== undefined ? _args12[1] : {\n                paginate: true\n              };\n              _getGlobalOptions3 = getGlobalOptions(query), resolveLinks = _getGlobalOptions3.resolveLinks, removeUnresolved = _getGlobalOptions3.removeUnresolved;\n              switchToEnvironment(http);\n              return _context12.abrupt(\"return\", (0, _pagedSync.default)(http, query, _objectSpread({\n                resolveLinks: resolveLinks,\n                removeUnresolved: removeUnresolved\n              }, options)));\n\n            case 5:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12);\n    }));\n    return _sync.apply(this, arguments);\n  }\n\n  function parseEntries(data) {\n    var _getGlobalOptions = getGlobalOptions({}),\n        resolveLinks = _getGlobalOptions.resolveLinks,\n        removeUnresolved = _getGlobalOptions.removeUnresolved;\n\n    return wrapEntryCollection(data, {\n      resolveLinks: resolveLinks,\n      removeUnresolved: removeUnresolved\n    });\n  }\n  /*\n   * Switches BaseURL to use /environments path\n   * */\n\n\n  function switchToEnvironment(http) {\n    http.defaults.baseURL = getGlobalOptions().environmentBaseUrl;\n  }\n  /*\n   * Switches BaseURL to use /spaces path\n   * */\n\n\n  function switchToSpace(http) {\n    http.defaults.baseURL = getGlobalOptions().spaceBaseUrl;\n  }\n\n  return {\n    getSpace: getSpace,\n    getContentType: getContentType,\n    getContentTypes: getContentTypes,\n    getEntry: getEntry,\n    getEntries: getEntries,\n    getAsset: getAsset,\n    getAssets: getAssets,\n    getTag: getTag,\n    getTags: getTags,\n    createAssetKey: createAssetKey,\n    getLocales: getLocales,\n    parseEntries: parseEntries,\n    sync: sync\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","createContentfulApi","_contentfulSdkCore","require","_entities","_interopRequireDefault","_pagedSync","_normalizeSelect","_validateTimestamp","obj","__esModule","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","ASSET_KEY_MAX_LIFETIME","_ref","http","getGlobalOptions","wrapSpace","space","contentType","wrapContentType","wrapContentTypeCollection","entry","wrapEntry","wrapEntryCollection","asset","wrapAsset","wrapAssetCollection","tag","wrapTag","wrapTagCollection","wrapAssetKey","assetKey","wrapLocaleCollection","locale","notFoundError","id","error","Error","sys","type","details","environment","getSpace","switchToSpace","get","response","data","errorHandler","getContentType","switchToEnvironment","getContentTypes","query","undefined","createRequestConfig","getEntry","getEntries","items","resolveLinks","removeUnresolved","getAsset","getAssets","getTag","getTags","createAssetKey","expiresAt","now","Math","floor","Date","currentMaxLifetime","maximum","params","post","getLocales","sync","options","paginate","parseEntries","defaults","baseURL","environmentBaseUrl","spaceBaseUrl"],"sources":["C:/Users/HP/Desktop/My Files/frontend files/beach-resort/node_modules/contentful/dist/es-modules/create-contentful-api.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createContentfulApi;\n\nvar _contentfulSdkCore = require(\"contentful-sdk-core\");\n\nvar _entities = _interopRequireDefault(require(\"./entities\"));\n\nvar _pagedSync = _interopRequireDefault(require(\"./paged-sync\"));\n\nvar _normalizeSelect = _interopRequireDefault(require(\"./utils/normalize-select\"));\n\nvar _validateTimestamp = _interopRequireDefault(require(\"./utils/validate-timestamp\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst ASSET_KEY_MAX_LIFETIME = 48 * 60 * 60;\n/**\n * Creates API object with methods to access functionality from Contentful's\n * Delivery API\n * @private\n * @param {Object} params - API initialization params\n * @prop {Object} http - HTTP client instance\n * @prop {Object} entities - Object with wrapper methods for each kind of entity\n * @prop {Function} getGlobalOptions - Link resolver preconfigured with global setting\n * @return {ClientAPI}\n */\n\nfunction createContentfulApi(_ref) {\n  let {\n    http,\n    getGlobalOptions\n  } = _ref;\n  const {\n    wrapSpace\n  } = _entities.default.space;\n  const {\n    wrapContentType,\n    wrapContentTypeCollection\n  } = _entities.default.contentType;\n  const {\n    wrapEntry,\n    wrapEntryCollection\n  } = _entities.default.entry;\n  const {\n    wrapAsset,\n    wrapAssetCollection\n  } = _entities.default.asset;\n  const {\n    wrapTag,\n    wrapTagCollection\n  } = _entities.default.tag;\n  const {\n    wrapAssetKey\n  } = _entities.default.assetKey;\n  const {\n    wrapLocaleCollection\n  } = _entities.default.locale;\n\n  const notFoundError = id => {\n    const error = new Error('The resource could not be found.');\n    error.sys = {\n      type: 'Error',\n      id: 'NotFound'\n    };\n    error.details = {\n      type: 'Entry',\n      id: id,\n      environment: getGlobalOptions().environment,\n      space: getGlobalOptions().space\n    };\n    return error;\n  };\n  /**\n   * Gets the Space which the client is currently configured to use\n   * @memberof ContentfulClientAPI\n   * @return {Promise<Entities.Space>} Promise for a Space\n   * @example\n   * const contentful = require('contentful')\n   *\n   * const client = contentful.createClient({\n   *   space: '<space_id>',\n   *   accessToken: '<content_delivery_api_key>'\n   * })\n   * // returns the space object with the above <space-id>\n   * const space = await client.getSpace()\n   * console.log(space)\n   */\n\n\n  async function getSpace() {\n    switchToSpace(http);\n\n    try {\n      const response = await http.get('/');\n      return wrapSpace(response.data);\n    } catch (error) {\n      (0, _contentfulSdkCore.errorHandler)(error);\n    }\n  }\n  /**\n   * Gets a Content Type\n   * @memberof ContentfulClientAPI\n   * @param  {string} id\n   * @return {Promise<Entities.ContentType>} Promise for a Content Type\n   * @example\n   * const contentful = require('contentful')\n   *\n   * const client = contentful.createClient({\n   *   space: '<space_id>',\n   *   accessToken: '<content_delivery_api_key>'\n   * })\n   *\n   * const contentType = await client.getContentType('<content_type_id>')\n   * console.log(contentType)\n   */\n\n\n  async function getContentType(id) {\n    switchToEnvironment(http);\n\n    try {\n      const response = await http.get(`content_types/${id}`);\n      return wrapContentType(response.data);\n    } catch (error) {\n      (0, _contentfulSdkCore.errorHandler)(error);\n    }\n  }\n  /**\n   * Gets a collection of Content Types\n   * @memberof ContentfulClientAPI\n   * @param  {Object=} query - Object with search parameters. Check the <a href=\"https://www.contentful.com/developers/docs/javascript/tutorials/using-js-cda-sdk/#retrieving-entries-with-search-parameters\">JS SDK tutorial</a> and the <a href=\"https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/search-parameters\">REST API reference</a> for more details.\n   * @return {Promise<Entities.ContentTypeCollection>} Promise for a collection of Content Types\n   * @example\n   * const contentful = require('contentful')\n   *\n   * const client = contentful.createClient({\n   *   space: '<space_id>',\n   *   accessToken: '<content_delivery_api_key>'\n   * })\n   *\n   * const response = await client.getContentTypes()\n   * console.log(response.items)\n   */\n\n\n  async function getContentTypes() {\n    let query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    switchToEnvironment(http);\n\n    try {\n      const response = await http.get('content_types', (0, _contentfulSdkCore.createRequestConfig)({\n        query: query\n      }));\n      return wrapContentTypeCollection(response.data);\n    } catch (error) {\n      (0, _contentfulSdkCore.errorHandler)(error);\n    }\n  }\n  /**\n   * Gets an Entry\n   * @memberof ContentfulClientAPI\n   * @param  {string} id\n   * @param  {Object=} query - Object with search parameters. In this method it's only useful for `locale`.\n   * @return {Promise<Entities.Entry>} Promise for an Entry\n   * @example\n   * const contentful = require('contentful')\n   *\n   * const client = contentful.createClient({\n   *   space: '<space_id>',\n   *   accessToken: '<content_delivery_api_key>'\n   * })\n   *\n   * const entry = await client.getEntry('<entry_id>')\n   * console.log(entry)\n   */\n\n\n  async function getEntry(id) {\n    let query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!id) {\n      throw notFoundError(id);\n    }\n\n    try {\n      const response = await this.getEntries(_objectSpread({\n        'sys.id': id\n      }, query));\n\n      if (response.items.length > 0) {\n        return wrapEntry(response.items[0]);\n      } else {\n        throw notFoundError(id);\n      }\n    } catch (error) {\n      (0, _contentfulSdkCore.errorHandler)(error);\n    }\n  }\n  /**\n   * Gets a collection of Entries\n   * @memberof ContentfulClientAPI\n   * @param  {Object=} query - Object with search parameters. Check the <a href=\"https://www.contentful.com/developers/docs/javascript/tutorials/using-js-cda-sdk/#retrieving-entries-with-search-parameters\">JS SDK tutorial</a> and the <a href=\"https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/search-parameters\">REST API reference</a> for more details.\n   * @return {Promise<Entities.EntryCollection>} Promise for a collection of Entries\n   * @example\n   * const contentful = require('contentful')\n   *\n   * const client = contentful.createClient({\n   *   space: '<space_id>',\n   *   accessToken: '<content_delivery_api_key>'\n   * })\n   *\n   * const response = await client.getEntries()\n   * console.log(response.items)\n   */\n\n\n  async function getEntries() {\n    let query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    switchToEnvironment(http);\n    const {\n      resolveLinks,\n      removeUnresolved\n    } = getGlobalOptions(query);\n    query = (0, _normalizeSelect.default)(query);\n\n    try {\n      const response = await http.get('entries', (0, _contentfulSdkCore.createRequestConfig)({\n        query: query\n      }));\n      return wrapEntryCollection(response.data, {\n        resolveLinks,\n        removeUnresolved\n      });\n    } catch (error) {\n      (0, _contentfulSdkCore.errorHandler)(error);\n    }\n  }\n  /**\n   * Gets an Asset\n   * @memberof ContentfulClientAPI\n   * @param  {string} id\n   * @param  {Object=} query - Object with search parameters. In this method it's only useful for `locale`.\n   * @return {Promise<Entities.Asset>} Promise for an Asset\n   * @example\n   * const contentful = require('contentful')\n   *\n   * const client = contentful.createClient({\n   *   space: '<space_id>',\n   *   accessToken: '<content_delivery_api_key>'\n   * })\n   *\n   * const asset = await client.getAsset('<asset_id>')\n   * console.log(asset)\n   */\n\n\n  async function getAsset(id) {\n    let query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    switchToEnvironment(http);\n    query = (0, _normalizeSelect.default)(query);\n\n    try {\n      const response = await http.get(`assets/${id}`, (0, _contentfulSdkCore.createRequestConfig)({\n        query: query\n      }));\n      return wrapAsset(response.data);\n    } catch (error) {\n      (0, _contentfulSdkCore.errorHandler)(error);\n    }\n  }\n  /**\n   * Gets a collection of Assets\n   * @memberof ContentfulClientAPI\n   * @param  {Object=} query - Object with search parameters. Check the <a href=\"https://www.contentful.com/developers/docs/javascript/tutorials/using-js-cda-sdk/#retrieving-entries-with-search-parameters\">JS SDK tutorial</a> and the <a href=\"https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/search-parameters\">REST API reference</a> for more details.\n   * @return {Promise<Entities.AssetCollection>} Promise for a collection of Assets\n   * @example\n   * const contentful = require('contentful')\n   *\n   * const client = contentful.createClient({\n   *   space: '<space_id>',\n   *   accessToken: '<content_delivery_api_key>'\n   * })\n   *\n   * const response = await client.getAssets()\n   * console.log(response.items)\n   */\n\n\n  async function getAssets() {\n    let query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    switchToEnvironment(http);\n    query = (0, _normalizeSelect.default)(query);\n\n    try {\n      const response = await http.get('assets', (0, _contentfulSdkCore.createRequestConfig)({\n        query: query\n      }));\n      return wrapAssetCollection(response.data);\n    } catch (error) {\n      (0, _contentfulSdkCore.errorHandler)(error);\n    }\n  }\n  /**\n   * Gets a Tag\n   * @memberof ContentfulClientAPI\n   * @param  {string} id\n   * @return {Promise<Entities.Tag>} Promise for a Tag\n   * @example\n   * const contentful = require('contentful')\n   *\n   * const client = contentful.createClient({\n   *   space: '<space_id>',\n   *   accessToken: '<content_delivery_api_key>'\n   * })\n   *\n   * const tag = await client.getTag('<asset_id>')\n   * console.log(tag)\n   */\n\n\n  async function getTag(id) {\n    switchToEnvironment(http);\n\n    try {\n      const response = await http.get(`tags/${id}`);\n      return wrapTag(response.data);\n    } catch (error) {\n      (0, _contentfulSdkCore.errorHandler)(error);\n    }\n  }\n  /**\n   * Gets a collection of Tags\n   * @memberof ContentfulClientAPI\n   * @param  {Object=} query - Object with search parameters.\n   * @return {Promise<Entities.TagCollection>} Promise for a collection of Tags\n   * @example\n   * const contentful = require('contentful')\n   *\n   * const client = contentful.createClient({\n   *   space: '<space_id>',\n   *   accessToken: '<content_delivery_api_key>'\n   * })\n   *\n   * const response = await client.getTags()\n   * console.log(response.items)\n   */\n\n\n  async function getTags() {\n    let query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    switchToEnvironment(http);\n    query = (0, _normalizeSelect.default)(query);\n\n    try {\n      const response = await http.get('tags', (0, _contentfulSdkCore.createRequestConfig)({\n        query: query\n      }));\n      return wrapTagCollection(response.data);\n    } catch (error) {\n      (0, _contentfulSdkCore.errorHandler)(error);\n    }\n  }\n  /**\n   * Creates an asset key for signing asset URLs (Embargoed Assets)\n   * @memberof ContentfulClientAPI\n   * @param {number} expiresAt - UNIX timestamp in the future, maximum of 48h from now\n   * @return {Promise<Entities.AssetKey>} Promise for an AssetKey\n   * @example\n   * const contentful = require('contentful')\n   *\n   * const client = contentful.createClient({\n   *   space: '<space_id>',\n   *   accessToken: '<content_delivery_api_key>'\n   * })\n   *\n   * const assetKey = await client.getAssetKey(<UNIX timestamp>)\n   * console.log(assetKey)\n   */\n\n\n  async function createAssetKey(expiresAt) {\n    switchToEnvironment(http);\n\n    try {\n      const now = Math.floor(Date.now() / 1000);\n      const currentMaxLifetime = now + ASSET_KEY_MAX_LIFETIME;\n      (0, _validateTimestamp.default)('expiresAt', expiresAt, {\n        maximum: currentMaxLifetime,\n        now\n      });\n      const params = {\n        expiresAt\n      };\n      const response = await http.post('asset_keys', params);\n      return wrapAssetKey(response.data);\n    } catch (error) {\n      (0, _contentfulSdkCore.errorHandler)(error);\n    }\n  }\n  /**\n   * Gets a collection of Locale\n   * @memberof ContentfulClientAPI\n   * @param  {Object=} query - Object with search parameters. Check the <a href=\"https://www.contentful.com/developers/docs/javascript/tutorials/using-js-cda-sdk/#retrieving-entries-with-search-parameters\">JS SDK tutorial</a> and the <a href=\"https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/search-parameters\">REST API reference</a> for more details.\n   * @return {Promise<Entities.LocaleCollection>} Promise for a collection of Locale\n   * @example\n   * const contentful = require('contentful')\n   *\n   * const client = contentful.createClient({\n   *   space: '<space_id>',\n   *   accessToken: '<content_delivery_api_key>'\n   * })\n   *\n   * const response = await client.getLocales()\n   * console.log(response.items)\n   */\n\n\n  async function getLocales() {\n    let query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    switchToEnvironment(http);\n\n    try {\n      const response = await http.get('locales', (0, _contentfulSdkCore.createRequestConfig)({\n        query: query\n      }));\n      return wrapLocaleCollection(response.data);\n    } catch (error) {\n      (0, _contentfulSdkCore.errorHandler)(error);\n    }\n  }\n  /**\n   * Synchronizes either all the content or only new content since last sync\n   * See <a href=\"https://www.contentful.com/developers/docs/concepts/sync/\">Synchronization</a> for more information.\n   * <strong> Important note: </strong> The the sync api endpoint does not support include or link resolution.\n   * However contentful.js is doing link resolution client side if you only make an initial sync.\n   * For the delta sync (using nextSyncToken) it is not possible since the sdk wont have access to all the data to make such an operation.\n   * @memberof ContentfulClientAPI\n   * @param  {Object} query - Query object for the sync call. One of initial or nextSyncToken always needs to be specified, but not both.\n   * @param  {boolean?} query.initial - Indicates if this is the first sync. Use it if you don't have a sync token.\n   * @param  {string?} query.nextSyncToken - The token you got the last time you used this method. Ensures you only get changed content.\n   * @param  {string=} query.type - Filter by this type (all (default), Entry, Asset, Deletion, DeletedAsset or DeletedEntry)\n   * @param  {string=} query.content_type - Filter by this content type id\n   * @param  {boolean=} query.resolveLinks - When true, links to other Entries or Assets are resolved. Default: true.\n   * @param  {Object} options\n   * @param  {boolean=} [options.paginate = true] - Set to false to disable pagination\n   * @return {Promise<Sync.SyncCollection>} Promise for the collection resulting of a sync operation\n   * @example\n   * const contentful = require('contentful')\n   *\n   * const client = contentful.createClient({\n   *   space: '<space_id>',\n   *   accessToken: '<content_delivery_api_key>'\n   * })\n   *\n   * const response = await client.sync({\n   *   initial: true\n   * })\n   * console.log({\n   *   entries: response.entries,\n   *   assets: response.assets,\n   *   nextSyncToken: response.nextSyncToken\n   * })\n   */\n\n\n  async function sync() {\n    let query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      paginate: true\n    };\n    const {\n      resolveLinks,\n      removeUnresolved\n    } = getGlobalOptions(query);\n    switchToEnvironment(http);\n    return (0, _pagedSync.default)(http, query, _objectSpread({\n      resolveLinks,\n      removeUnresolved\n    }, options));\n  }\n  /**\n  * Parse raw json data into collection of entry objects.Links will be resolved also\n  * @memberof ContentfulClientAPI\n  * @param {Object} raw json data\n  * @example\n  * let data = {items: [\n  *    {\n  *    sys: {type: 'Entry', locale: 'en-US'},\n  *    fields: {\n  *      animal: {sys: {type: 'Link', linkType: 'Animal', id: 'oink'}},\n  *      anotheranimal: {sys: {type: 'Link', linkType: 'Animal', id: 'middle-parrot'}}\n  *    }\n  *  }\n  * ],\n  * includes: {\n  *  Animal: [\n  *    {\n  *      sys: {type: 'Animal', id: 'oink', locale: 'en-US'},\n  *      fields: {\n  *        name: 'Pig',\n  *        friend: {sys: {type: 'Link', linkType: 'Animal', id: 'groundhog'}}\n  *      }\n  *    }\n  *   ]\n  *  }\n  * }\n  * console.log( data.items[0].fields.foo ); // undefined\n  * let parsedData = client.parseEntries(data);\n  * console.log( parsedData.items[0].fields.foo ); // foo\n  */\n\n\n  function parseEntries(data) {\n    const {\n      resolveLinks,\n      removeUnresolved\n    } = getGlobalOptions({});\n    return wrapEntryCollection(data, {\n      resolveLinks,\n      removeUnresolved\n    });\n  }\n  /*\n   * Switches BaseURL to use /environments path\n   * */\n\n\n  function switchToEnvironment(http) {\n    http.defaults.baseURL = getGlobalOptions().environmentBaseUrl;\n  }\n  /*\n   * Switches BaseURL to use /spaces path\n   * */\n\n\n  function switchToSpace(http) {\n    http.defaults.baseURL = getGlobalOptions().spaceBaseUrl;\n  }\n\n  return {\n    getSpace,\n    getContentType,\n    getContentTypes,\n    getEntry,\n    getEntries,\n    getAsset,\n    getAssets,\n    getTag,\n    getTags,\n    createAssetKey,\n    getLocales,\n    parseEntries,\n    sync\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}