{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\My Files\\\\frontend files\\\\beach-resort\\\\src\\\\context.js\";\nimport React, { Component } from 'react';\nimport items from './data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoomContext = /*#__PURE__*/React.createContext(); // <RoomContext.Provider value={}\n\nclass RoomProvider extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      rooms: [],\n      sortedRooms: [],\n      featuredRooms: [],\n      loading: true,\n      type: 'all',\n      capacity: 1,\n      price: 0,\n      minPrice: 0,\n      maxPrice: 0,\n      minSize: 0,\n      maxSize: 0,\n      pets: false,\n      breakfast: false\n    };\n\n    this.getRoom = slug => {\n      let tempRooms = [...this.state.rooms];\n      const room = tempRooms.find(room => room.slug === slug);\n      return room;\n    };\n  }\n\n  //getData {}\n  componentDidMount() {\n    //getting sorted data from function\n    let rooms = this.formatData(items); //sorting rooms by featured state then adding this rooms to featuredRooms which was empty array\n\n    let featuredRooms = rooms.filter(room => room.featured === true); //getting max size and price from rooms object by Math.max method\n\n    let maxPrice = Math.max(...rooms.map(item => item.price));\n    let maxSize = Math.max(...rooms.map(item => item.size)); //setting state with new sorted data\n\n    this.setState({\n      rooms,\n      featuredRooms,\n      sortedRooms: rooms,\n      loading: false,\n      price: maxPrice,\n      maxPrice: maxPrice,\n      maxSize: maxSize\n    });\n  } //for formatting data, because we have complex data from contentful\n\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n      let room = { ...item.fields,\n        id,\n        images\n      };\n      return room;\n    });\n    return tempItems;\n  } //function for getting room information from data by its slug\n\n\n  render() {\n    return (\n      /*#__PURE__*/\n      //sending props to children using context\n      _jsxDEV(RoomContext.Provider, {\n        value: { ...this.state,\n          getRoom: this.getRoom\n        },\n        children: this.props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n}\n/* A higher-order component (HOC) is an advanced technique in React for reusing component logic. HOCs are not part\r\n * of the React API, per se. They are a pattern that emerges from React’s compositional nature. Concretely, a\r\n * higher-order component is a function that takes a component and returns a new component. */\n\n\nconst RoomConsumer = RoomContext.Consumer; // This function takes a component...\n\nexport function withRoomConsumer(Component) {\n  // ...and returns another component...\n  return function ConsumerWrapper(props) {\n    return /*#__PURE__*/_jsxDEV(RoomConsumer, {\n      children: value => /*#__PURE__*/_jsxDEV(Component, { ...props,\n        context: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this);\n  };\n}\nexport { RoomProvider, RoomConsumer, RoomContext };","map":{"version":3,"names":["React","Component","items","RoomContext","createContext","RoomProvider","state","rooms","sortedRooms","featuredRooms","loading","type","capacity","price","minPrice","maxPrice","minSize","maxSize","pets","breakfast","getRoom","slug","tempRooms","room","find","componentDidMount","formatData","filter","featured","Math","max","map","item","size","setState","tempItems","id","sys","images","fields","image","file","url","render","props","children","RoomConsumer","Consumer","withRoomConsumer","ConsumerWrapper","value"],"sources":["C:/Users/HP/Desktop/My Files/frontend files/beach-resort/src/context.js"],"sourcesContent":["import React, {Component} from 'react';\r\nimport items from './data'\r\n\r\nconst RoomContext = React.createContext()\r\n\r\n// <RoomContext.Provider value={}\r\n\r\nclass RoomProvider extends Component {\r\n    state = {\r\n        rooms: [],\r\n        sortedRooms: [],\r\n        featuredRooms: [],\r\n        loading: true,\r\n        type: 'all',\r\n        capacity: 1,\r\n        price: 0,\r\n        minPrice: 0,\r\n        maxPrice: 0,\r\n        minSize: 0,\r\n        maxSize: 0,\r\n        pets: false,\r\n        breakfast: false\r\n\r\n    }\r\n\r\n    //getData {}\r\n\r\n    componentDidMount() {\r\n        //getting sorted data from function\r\n        let rooms = this.formatData(items)\r\n        //sorting rooms by featured state then adding this rooms to featuredRooms which was empty array\r\n        let featuredRooms = rooms.filter((room) => room.featured === true)\r\n        //getting max size and price from rooms object by Math.max method\r\n        let maxPrice = Math.max(...rooms.map((item) => item.price))\r\n        let maxSize = Math.max(...rooms.map((item) => item.size))\r\n\r\n        //setting state with new sorted data\r\n        this.setState({\r\n            rooms,\r\n            featuredRooms,\r\n            sortedRooms: rooms,\r\n            loading: false,\r\n            price: maxPrice,\r\n            maxPrice: maxPrice,\r\n            maxSize: maxSize\r\n        })\r\n    }\r\n\r\n    //for formatting data, because we have complex data from contentful\r\n    formatData(items) {\r\n        let tempItems = items.map((item) => {\r\n            let id = item.sys.id\r\n            let images = item.fields.images.map((image) => image.fields.file.url)\r\n            let room = {...item.fields, id, images}\r\n            return room\r\n        })\r\n        return tempItems\r\n    }\r\n\r\n    //function for getting room information from data by its slug\r\n    getRoom = slug => {\r\n        let tempRooms = [...this.state.rooms]\r\n        const room = tempRooms.find(room => room.slug === slug)\r\n        return room\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            //sending props to children using context\r\n            <RoomContext.Provider value={{...this.state, getRoom: this.getRoom}}>\r\n                {this.props.children}\r\n            </RoomContext.Provider>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n/* A higher-order component (HOC) is an advanced technique in React for reusing component logic. HOCs are not part\r\n * of the React API, per se. They are a pattern that emerges from React’s compositional nature. Concretely, a\r\n * higher-order component is a function that takes a component and returns a new component. */\r\n\r\nconst RoomConsumer = RoomContext.Consumer\r\n\r\n// This function takes a component...\r\nexport function withRoomConsumer(Component) {\r\n    // ...and returns another component...\r\n    return function ConsumerWrapper(props) {\r\n        return (\r\n            <RoomConsumer>\r\n                {value => <Component {...props} context={value}/>}\r\n            </RoomConsumer>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport {RoomProvider, RoomConsumer, RoomContext}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}